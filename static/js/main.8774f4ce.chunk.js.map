{"version":3,"sources":["common/Button/Button.jsx","components/Header/Header.jsx","utils/time.js","components/Clock/Clock.jsx","common/InputDate/InputDate.jsx","components/DatePicker/DatePicker.jsx","components/Presentation/Presentation.jsx","components/TimeBetween/TimeBetween.jsx","components/App.jsx","serviceWorkerRegistration.js","reportWebVitals.js","index.js","components/Clock/Clock.module.scss","components/TimeBetween/TimeBetween.module.scss","components/App.module.scss","components/Header/Header.module.scss"],"names":["Button","type","onClick","value","className","Header","setTheme","theme","styles","time","date","Date","day","getUTCDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","Clock","useState","setTime","useEffect","interval","setInterval","clearInterval","format","Fragment","content","content__time","dateTime","content__date","InputDate","dateFormat","timeFormat","timeIntervals","id","name","isDisable","onChange","selected","showTimeInput","timeInputLabel","disabled","DatePicker","change","useNow","scss","text","htmlFor","inputValue","e","checked","Presentation","TimeBetween","start","setStart","end","setEnd","results","setResult","TimeBetweenStyles","datepicker","datepicker__calendar","updatedResults","startDate","endDate","delta","Math","abs","isNegative","reduce","acc","key","temp","floor","finalTime","unit","push","join","timeBetween","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","module","exports"],"mappings":"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","file":"static/js/main.8774f4ce.chunk.js","sourcesContent":["import './Button.scss'\nimport React from 'react'\n\nfunction Button({ type, onClick, value }) {\n  return (\n  <button className={ `button button--${ type }` }\n    onClick={ onClick }>\n      { value || '' }\n  </button>\n  )\n}\n\nexport default Button","import styles from './Header.module.scss'\n\nimport React from 'react'\n\nimport Button from '../../common/Button/Button'\n\nfunction Header({ setTheme, theme }) {\n  const changeTheme = () => {\n    if(theme === 'dark') setTheme('light')\n    else if(theme === 'light') setTheme('dark')\n  }\n  return (\n    <header className={ styles.Header }>\n      <Button type='primary' value='change theme' onClick={changeTheme} />\n    </header>\n  )\n}\n\nexport default Header","export const time = () => {\n  const date = new Date()\n\n  const day = date.getUTCDate()\n  const month = date.getMonth() + 1\n  const year = date.getFullYear()\n\n  const hour = date.getHours()\n  const minute = date.getMinutes()\n  const second = date.getSeconds()\n\n  return { day, month, year, hour, minute, second }\n}\n\nexport const format = ({day, month, year, hour, minute, second}) => {\n  day = day < 10 ? `0${day}` : day\n  month = month < 10 ? `0${month}` : month\n  hour = hour < 10 ? `0${hour}` : hour\n  minute = minute < 10 ? `0${minute}` : minute\n  second = second < 10 ? `0${second}` : second\n\n  return { day, month, year, hour, minute, second }\n}\n\nexport const timeBetween = ({startDate = new Date(), endDate = new Date()}) => {\n  let delta = Math.abs(endDate - startDate) / 1000\n  const isNegative = startDate > endDate ? -1 : 1\n\n  const time = [\n    ['weeks', 7 * 24 * 60 * 60],\n    ['days', 24 * 60 * 60],\n    ['hours', 60 * 60],\n    ['minutes', 60],\n    ['seconds', 1]\n  ].reduce((acc, [key, value]) => {\n    let temp = Math.floor(delta / value)\n    if (temp === 0) return acc\n    else return (acc[key] = temp * isNegative, delta -= acc[key] * isNegative * value, acc)\n  }, {})\n\n  let finalTime = []\n\n  for (const unit in time) {\n    finalTime.push(`${time[unit]} ${unit}`)\n  }\n\n  return finalTime.join(', ')\n}\n","import styles from './Clock.module.scss'\nimport React, { useState, useEffect } from 'react'\n\nimport { time, format } from '../../utils/time'\n\nfunction Clock() {\n  const [date, setTime] = useState(time())\n\n  useEffect(() => {\n    const interval = setInterval(() => setTime(time()), 500)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const { day, month, year, hour, minute, second } = format(date)\n\n  return (\n    <React.Fragment>\n      <h1 className={styles.content}>\n        <time className={styles.content__time} dateTime={ `${hour}:${minute}:${second}` }>\n          { `${hour}:${minute}:${second}` }\n        </time>\n        <time className={styles.content__date} dateTime={ `${month}/${day}/${year}` }>\n          { `${month}/${day}/${year}` }\n        </time>\n      </h1>\n    </React.Fragment>\n  )\n}\n\nexport default Clock","import 'react-datepicker/dist/react-datepicker.css'\nimport './InputDate.scss'\n\nimport DatePicker from 'react-datepicker'\nimport React from 'react'\n\nfunction InputDate({\n  dateFormat = 'MMMM d, yyyy h:mm aa',\n  timeFormat = 'HH:mm',\n  timeIntervals = 10,\n  value, name, id, isDisable, onChange\n}) {\n  return (\n    <DatePicker\n      // showTimeSelect\n      timeIntervals={ timeIntervals }\n      selected={ value }\n      dateFormat={ dateFormat }\n      timeFormat={ timeFormat }\n      name={ id }\n      id={ id }\n      showTimeInput\n      timeInputLabel='Time:'\n      disabled={ isDisable }\n      onChange={ onChange }\n    />\n  )\n}\n\nexport default InputDate","import React from 'react'\n\nimport InputDate from '../../common/InputDate/InputDate'\n\nfunction DatePicker({ change, useNow, scss, id, text, value }) {\n  const dateChangeHandler = inputValue => {\n    change({date: inputValue, useNow})\n  }\n\n  const useNowChangeHandler = e => {\n    change({ date: value, useNow: !useNow})\n  }\n\n  return (\n    <div className={ scss }>\n      <label htmlFor={ id }>{ text }: </label>\n      <InputDate value={ value } id={ id } name={ id }\n        isDisable={ useNow } onChange={ dateChangeHandler } />\n      <div>\n        <label htmlFor={ `use-now_${id}` }>Usar data atual?</label>\n        <input type='checkbox' name={ `use-now_${id}` } id={ `use-now_${id}` }\n          value={ useNow } onChange={ useNowChangeHandler } checked={ useNow } />\n      </div>\n    </div>\n  )\n}\n\nexport default DatePicker","import './Presentation.scss'\nimport React from 'react'\n\nfunction Presentation({ time }) {\n  return <div className='presentation'>{ time }</div>\n}\n\nexport default Presentation\n","import React, { useState } from 'react'\nimport { timeBetween } from '../../utils/time'\n\nimport DatePicker from '../DatePicker/DatePicker'\nimport TimeBetweenStyles from './TimeBetween.module.scss'\nimport Presentation from '../Presentation/Presentation'\nimport Button from '../../common/Button/Button'\n\nfunction TimeBetween() {\n  const [start, setStart] = useState({ date: new Date(), useNow: false })\n  const [end, setEnd] = useState({ date: '', useNow: true })\n  const [results, setResult] = useState('')\n\n  const updateResults = () => {\n    if((!start.date && !start.useNow) || (!end.date && !end.useNow)) {\n      setResult('Selecione um horário válido')\n      return \n    }\n    const sdate = start.useNow ? new Date() : new Date(start.date)\n    const edate = end.useNow ? new Date() : new Date(end.date)\n\n    const updatedResults = timeBetween({startDate: sdate, endDate: edate})\n    setResult(updatedResults)\n  }\n\n  return (\n    <React.Fragment>\n      <div className={TimeBetweenStyles.datepicker}>\n        <DatePicker text='Data Inicial' id='startDate' value={ start.date }\n          useNow={ start.useNow } change={ setStart } scss={ TimeBetweenStyles.datepicker__calendar } />\n        <DatePicker text='Data Final' id='endDate' value={ end.date }\n          useNow={ end.useNow } change={ setEnd } scss={ TimeBetweenStyles.datepicker__calendar } />  \n      </div>\n\n      <Button onClick={ updateResults } value='calculate' type='primary' />\n      <Presentation time={ results } />\n    </React.Fragment>\n  )\n}\n\nexport default TimeBetween","import styles from './App.module.scss'\nimport React, { useState } from 'react'\n\nimport Header from './Header/Header'\nimport Clock from './Clock/Clock'\nimport TimeBetween from './TimeBetween/TimeBetween'\n\nfunction App() {\n  const [theme, setTheme] = useState('dark')\n\n  return (\n    <div className={[styles.App, `theme-${theme}`].join(' ')}>\n      <Header setTheme={setTheme} theme={theme} />\n      <Clock />\n      <TimeBetween />\n    </div>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './styles/app.scss'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\n\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorkerRegistration.register()\nreportWebVitals()","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Clock_content__3I42q\",\"content__time\":\"Clock_content__time__1wJOt\",\"content__date\":\"Clock_content__date__95Z0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datepicker\":\"TimeBetween_datepicker__Z2jT4\",\"datepicker__calendar\":\"TimeBetween_datepicker__calendar__32DJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__rq8wc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__1CTzX\"};"],"sourceRoot":""}